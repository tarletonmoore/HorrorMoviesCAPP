@model IEnumerable<MyHorrorMovieApp.Models.Movie>

<!DOCTYPE html>
<html>

<head>
    <title>Movies Index</title>
</head>

<body>
    <nav>
        <ul>
            <li><a href="/">Home</a></li>
            <form method="post" action="/logout">
                <button type="submit">Logout</button>
            </form>

        </ul>
    </nav>

    <h1>Movies Index</h1>
    <!-- Display each movie and its details -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        function submitReview(movieId) {
            // Retrieve the JWT token from the URL query parameter
            var token = getParameterByName('token');
            console.log(token);
            // Check if token exists
            if (!token) {
                console.error('JWT token not found in URL.');
                return;
            }

            // Split the token into its components (header, payload, signature)
            const [header, payload, signature] = token.split('.');

            // Decode and parse the payload to get user ID
            const decodedPayload = JSON.parse(atob(payload));
            console.log('Decoded Payload:', decodedPayload);

            // Now you have the user ID, you can use it as needed

            var formData = $('#reviewForm_' + movieId).serialize();
            console.log(formData);
            fetch('/Reviews/Create', {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'Authorization': 'Bearer ' + token // Include token in Authorization header
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Review created successfully:', data);
                    if (data.success) {
                        // Redirect to the movies index page
                        window.location.href = '/Movies';
                    } else {
                        console.error('Error creating review:', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error creating review:', error);
                    // Optionally handle error here
                });
        }
        // Function to retrieve query parameter value by name
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, '\\$&');
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        }
    </script>



    @foreach (var movie in Model)
    {
        <div class="movie-card">
            <h2>@movie.Title</h2>
            <img src="@movie.Image" alt="@movie.Title" width="300px" />
            <h3>Reviews</h3>
            <ul>
                @foreach (var review in movie.Reviews)
                {
                    <li>@review.User.Username: @review.Comment</li>
                }
            </ul>

            <form id="reviewForm_@movie.Id">
                <input type="hidden" name="MovieId" value="@movie.Id" />
                <input type="text" name="Comment" />
                <button type="button" onclick="submitReview(@movie.Id)">Add Review</button>
            </form>
            <br></br>
        </div>
    }




</body>

</html>
